labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item_table)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
#Graficos de distribución de respuestas general según empresa
# Descriptivo general de cada item.
pal_blues4 <- brewer.pal(4, "Blues")
pal_blues4_range <- colorRampPalette(pal_blues4)
gg_stacked_item <- function(.df,
item_select = NULL,
xlab_title = NULL) {
p_item_aux1<- .df %>%
group_by(empresa, .df[[item_select]]) %>%
summarize(n = n()) %>%
mutate(pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux2 <- .df %>%
count(.df[[item_select]]) %>%
mutate(empresa = paste0("Total muestra"),
pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux <- rbind(p_item_aux1, p_item_aux2)
p_item <- ggplot(p_item_aux, aes(x = empresa,
y = pct,
fill = factor(.df[[item_select]], levels = c('Casi siempre', 'Frecuentemente', 'Algunas veces', 'Casi nunca')))) +
geom_bar(stat = "identity",
position = "fill",
color = "black") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = var_lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
#Graficos de distribución de respuestas general según empresa
# Descriptivo general de cada item.
pal_blues4 <- brewer.pal(4, "Blues")
pal_blues4_range <- colorRampPalette(pal_blues4)
gg_stacked_item <- function(.df,
item_select = NULL,
xlab_title = NULL) {
item <- .df[[item_select]]
p_item_aux1<- .df %>%
group_by(empresa, item) %>%
summarize(n = n()) %>%
mutate(pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux2 <- .df %>%
count(item) %>%
mutate(empresa = paste0("Total muestra"),
pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux <- rbind(p_item_aux1, p_item_aux2)
p_item <- ggplot(p_item_aux, aes(x = empresa,
y = pct,
fill = factor(item, levels = c('Casi siempre', 'Frecuentemente', 'Algunas veces', 'Casi nunca')))) +
geom_bar(stat = "identity",
position = "fill",
color = "black") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = var_lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
#Graficos de distribución de respuestas general según empresa
# Descriptivo general de cada item.
pal_blues4 <- brewer.pal(4, "Blues")
pal_blues4_range <- colorRampPalette(pal_blues4)
gg_stacked_item <- function(.df,
item_select = NULL,
xlab_title = NULL) {
p_item_aux1<- .df %>%
group_by(empresa, .df[[item_select]]) %>%
summarize(n = n()) %>%
mutate(pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux2 <- .df %>%
count(.df[[item_select]]) %>%
mutate(empresa = paste0("Total muestra"),
pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux <- rbind(p_item_aux1, p_item_aux2)
p_item <- ggplot(p_item_aux, aes(x = empresa,
y = pct,
fill = factor(p_item_aux$.df[[item_select]], levels = c('Casi siempre', 'Frecuentemente', 'Algunas veces', 'Casi nunca')))) +
geom_bar(stat = "identity",
position = "fill",
color = "black") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = var_lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
#Graficos de distribución de respuestas general según empresa
# Descriptivo general de cada item.
pal_blues4 <- brewer.pal(4, "Blues")
pal_blues4_range <- colorRampPalette(pal_blues4)
gg_stacked_item <- function(.df,
item_select = NULL,
xlab_title = NULL) {
p_item_aux1<- .df %>%
rename(item = .df[[item_select]]) %>%
group_by(empresa, item) %>%
summarize(n = n()) %>%
mutate(pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux2 <- .df %>%
rename(item = .df[[item_select]]) %>%
count(item) %>%
mutate(empresa = paste0("Total muestra"),
pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux <- rbind(p_item_aux1, p_item_aux2)
p_item <- ggplot(p_item_aux, aes(x = empresa,
y = pct,
fill = factor(item, levels = c('Casi siempre', 'Frecuentemente', 'Algunas veces', 'Casi nunca')))) +
geom_bar(stat = "identity",
position = "fill",
color = "black") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = var_lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
#Graficos de distribución de respuestas general según empresa
# Descriptivo general de cada item.
pal_blues4 <- brewer.pal(4, "Blues")
pal_blues4_range <- colorRampPalette(pal_blues4)
gg_stacked_item <- function(.df,
item_select = NULL,
xlab_title = NULL) {
p_item_aux1<- .df %>%
rename(item = .df[[item_select]]) %>%
group_by(empresa, item) %>%
summarize(n = n()) %>%
mutate(pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux2 <- .df %>%
rename(item = .df[[item_select]]) %>%
count(item) %>%
mutate(empresa = paste0("Total muestra"),
pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux <- rbind(p_item_aux1, p_item_aux2)
p_item <- ggplot(p_item_aux, aes(x = empresa,
y = pct,
fill = factor(item, levels = c('Casi siempre', 'Frecuentemente', 'Algunas veces', 'Casi nunca')))) +
geom_bar(stat = "identity",
position = "fill",
color = "black") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = var_lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
#Graficos de distribución de respuestas general según empresa
# Descriptivo general de cada item.
pal_blues4 <- brewer.pal(4, "Blues")
pal_blues4_range <- colorRampPalette(pal_blues4)
gg_stacked_item <- function(.df,
item_select = NULL,
xlab_title = NULL) {
p_item_aux1<- .df %>%
rename(item = .df[[item_select]]) %>%
group_by(empresa, item) %>%
summarize(n = n()) %>%
mutate(pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux2 <- .df %>%
rename(item = .df[[item_select]]) %>%
count(item) %>%
mutate(empresa = paste0("Total muestra"),
pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux <- rbind(p_item_aux1, p_item_aux2)
p_item <- ggplot(p_item_aux, aes(x = empresa,
y = pct,
fill = factor(item, levels = c('Casi siempre', 'Frecuentemente', 'Algunas veces', 'Casi nunca')))) +
geom_bar(stat = "identity",
position = "fill",
color = "black") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = var_lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item_table)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
#Graficos de distribución de respuestas general según empresa
# Descriptivo general de cada item.
pal_blues4 <- brewer.pal(4, "Blues")
pal_blues4_range <- colorRampPalette(pal_blues4)
gg_stacked_item <- function(.df,
item_select = NULL,
xlab_title = NULL) {
p_item_aux1<- .df %>%
rename(item = .df[[item_select]]) %>%
group_by(empresa, item) %>%
summarize(n = n()) %>%
mutate(pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux2 <- .df %>%
rename(item = .df[[item_select]]) %>%
count(item) %>%
mutate(empresa = paste0("Total muestra"),
pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux <- rbind(p_item_aux1, p_item_aux2)
p_item <- ggplot(p_item_aux, aes(x = empresa,
y = pct,
fill = factor(item_select, levels = c('Casi siempre', 'Frecuentemente', 'Algunas veces', 'Casi nunca')))) +
geom_bar(stat = "identity",
position = "fill",
color = "black") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = var_lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item_table)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
#Graficos de distribución de respuestas general según empresa
# Descriptivo general de cada item.
pal_blues4 <- brewer.pal(4, "Blues")
pal_blues4_range <- colorRampPalette(pal_blues4)
gg_stacked_item <- function(.df,
item_select = NULL,
xlab_title = NULL) {
p_item_aux1<- .df %>%
group_by(empresa, .df[[item_select]]) %>%
summarize(n = n()) %>%
mutate(pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux2 <- .df %>%
count(.df[[item_select]]) %>%
mutate(empresa = paste0("Total muestra"),
pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux <- rbind(p_item_aux1, p_item_aux2)
colnames(p_item_aux)
p_item <- ggplot(p_item_aux, aes(x = empresa,
y = pct,
fill = factor(item_x, levels = c('Casi siempre', 'Frecuentemente', 'Algunas veces', 'Casi nunca')))) +
geom_bar(stat = "identity",
position = "fill",
color = "black") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = var_lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
#Graficos de distribución de respuestas general según empresa
# Descriptivo general de cada item.
pal_blues4 <- brewer.pal(4, "Blues")
pal_blues4_range <- colorRampPalette(pal_blues4)
gg_stacked_item <- function(.df,
item_select = NULL,
xlab_title = NULL) {
p_item_aux1<- .df %>%
group_by(empresa, .df[[item_select]]) %>%
summarize(n = n()) %>%
mutate(pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux2 <- .df %>%
count(.df[[item_select]]) %>%
mutate(empresa = paste0("Total muestra"),
pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux <- rbind(p_item_aux1, p_item_aux2)
colnames(p_item_aux) <- c("empresa", "item_x", "n", "pct", "lbl", "var_lbl")
p_item <- ggplot(p_item_aux, aes(x = empresa,
y = pct,
fill = factor(item_x, levels = c('Casi siempre', 'Frecuentemente', 'Algunas veces', 'Casi nunca')))) +
geom_bar(stat = "identity",
position = "fill",
color = "black") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = var_lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
#Graficos de distribución de respuestas general según empresa
# Descriptivo general de cada item.
pal_blues4 <- brewer.pal(4, "Blues")
pal_blues4_range <- colorRampPalette(pal_blues4)
gg_stacked_item <- function(.df,
item_select = NULL,
xlab_title = NULL) {
p_item_aux1<- .df %>%
group_by(empresa, .df[[item_select]]) %>%
summarize(n = n()) %>%
mutate(pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux2 <- .df %>%
count(.df[[item_select]]) %>%
mutate(empresa = paste0("Total muestra"),
pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux <- rbind(p_item_aux1, p_item_aux2)
colnames(p_item_aux) <- c("empresa", "item_x", "n", "pct", "lbl", "var_lbl")
p_item <- ggplot(p_item_aux, aes(x = empresa,
y = pct,
fill = factor(item_x, levels = c('Casi siempre', 'Frecuentemente', 'Algunas veces', 'Casi nunca')))) +
geom_bar(stat = "identity",
position = "fill",
color = "black") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = var_lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
#Graficos de distribución de respuestas general según empresa
# Descriptivo general de cada item.
pal_blues4 <- brewer.pal(4, "Blues")
pal_blues4_range <- colorRampPalette(pal_blues4)
gg_stacked_item <- function(.df,
item_select = NULL,
xlab_title = NULL) {
p_item_aux1<- .df %>%
group_by(empresa, .df[[item_select]]) %>%
summarize(n = n()) %>%
mutate(pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux2 <- .df %>%
count(.df[[item_select]]) %>%
mutate(empresa = paste0("Total muestra"),
pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux <- rbind(p_item_aux1, p_item_aux2)
colnames(p_item_aux) <- c("empresa", "item_x", "n", "pct", "lbl", "var_lbl")
p_item <- ggplot(p_item_aux, aes(x = empresa,
y = pct,
fill = factor(item_x, levels = c('Casi siempre', 'Frecuentemente', 'Algunas veces', 'Casi nunca')))) +
geom_bar(stat = "identity",
position = "fill",
color = "black") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = var_lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
gg_stacked_item <- function(.df,
item_select = NULL,
xlab_title = NULL) {
p_item_aux1<- .df %>%
group_by(empresa, .df[[item_select]]) %>%
summarize(n = n()) %>%
mutate(pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux2 <- .df %>%
count(.df[[item_select]]) %>%
mutate(empresa = paste0("Total muestra"),
pct = n/sum(n),
lbl = percent(pct),
var_lbl = paste0(lbl, "(", n, ")"))
p_item_aux <- rbind(p_item_aux1, p_item_aux2)
colnames(p_item_aux) <- c("empresa", "item_x", "n", "pct", "lbl", "var_lbl")
p_item <- ggplot(p_item_aux, aes(x = empresa,
y = pct,
fill = factor(item_x, levels = c('Casi siempre', 'Frecuentemente', 'Algunas veces', 'Casi nunca')))) +
geom_bar(stat = "identity",
position = "fill",
color = "black") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = var_lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
labs(y = "Porcentaje",
x = xlab_title,
caption = "Fuente: Elaboración propia \nNota: N de cada categoría entre paréntesis") +
theme(legend.title = "", legend.position = "top") +
theme_minimal()
p_item_table <- View(p_item_aux)
return(p_item)
}
gg_stacked_item(df, 'item13', "\nCuando ocurre un accidente las jefaturas buscan las causas, \nno a los culpables.")+
scale_fill_manual(values = c("#2171B5","#6BAED6","#BDD7E7", "#EFF3FF"))
